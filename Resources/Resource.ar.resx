<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="BShop_Address" xml:space="preserve">
    <value>56 King Street, New York</value>
  </data>
  <data name="BShop_PhoneNumber" xml:space="preserve">
    <value>+1 964 123 456789</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Culture" xml:space="preserve">
    <value>Culture</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailConfirmed" xml:space="preserve">
    <value>You email confirmed successfully! Now you can login.</value>
  </data>
  <data name="EnterOldPasswordAndNewOneToChangeYourPassword" xml:space="preserve">
    <value>Enter old password and new one to change your password</value>
  </data>
  <data name="ExceptionConnectionStringNotFound" xml:space="preserve">
    <value>There are no Connection string '{0}' in 'appsettings.json' file.</value>
  </data>
  <data name="ExceptionJwtKeyNotFound" xml:space="preserve">
    <value>There are no Jwt:Key in appsettings.json file.</value>
  </data>
  <data name="ExceptionReCAPTCHASecretKeyIsNull" xml:space="preserve">
    <value>ReCAPTCHA SecretKey Is Null</value>
  </data>
  <data name="ExceptionReCAPTCHASiteKeyIsNull" xml:space="preserve">
    <value>ReCAPTCHA SiteKey Is Null</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="InvalidLink" xml:space="preserve">
    <value>The link is not valid.</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogingIn" xml:space="preserve">
    <value>Loging in...</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NoLanguageAddedYet" xml:space="preserve">
    <value>There are no languages added yet.</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordChangedSucceeded" xml:space="preserve">
    <value>The password changed successfully.</value>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>The password requires a digit.</value>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>The password requires a lowercase letter.</value>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>The password requires a non-alphanumeric character.</value>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>The password requires an uppercase letter.</value>
  </data>
  <data name="PasswordReseted" xml:space="preserve">
    <value>Your password resetted successfully! Now you can login using the new password.</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>The provided password is too short.</value>
  </data>
  <data name="PasswordUpdated" xml:space="preserve">
    <value>Password Updated</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Registering" xml:space="preserve">
    <value>Registering...</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="RTL" xml:space="preserve">
    <value>RTL</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SeoCode" xml:space="preserve">
    <value>SeoCode</value>
  </data>
  <data name="String" xml:space="preserve">
    <value>The password requires a unique character.</value>
  </data>
  <data name="UpdatingProfileSucceeded" xml:space="preserve">
    <value>The profile updated successfully.</value>
  </data>
  <data name="UserChangePasswordSucceeded" xml:space="preserve">
    <value>Your password changed successfully! Now you can login using the new password.</value>
  </data>
  <data name="UserEmailAddedBefore" xml:space="preserve">
    <value>This email used before.</value>
  </data>
  <data name="UserLocked" xml:space="preserve">
    <value>Your account is locked.</value>
  </data>
  <data name="UserLoginFailed" xml:space="preserve">
    <value>Failed login</value>
  </data>
  <data name="UserLoginSucceeded" xml:space="preserve">
    <value>Succeeded loged in</value>
  </data>
  <data name="UserLogoutSucceeded" xml:space="preserve">
    <value>Succeeded loged out</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UserNeedEmailActivation" xml:space="preserve">
    <value>Your email in not confirmed yet.</value>
  </data>
  <data name="UserNotActive" xml:space="preserve">
    <value>Your account is not active.</value>
  </data>
  <data name="UserResetPasswordSucceeded" xml:space="preserve">
    <value>Succeeded password resetted.</value>
  </data>
  <data name="UserResetSucceeded" xml:space="preserve">
    <value>The password reset link sent to your email.</value>
  </data>
  <data name="Validation_Required" xml:space="preserve">
    <value>The {0} field is required.</value>
  </data>
  <data name="Validation_Unique" xml:space="preserve">
    <value>The {0} field is added before.</value>
  </data>
</root>